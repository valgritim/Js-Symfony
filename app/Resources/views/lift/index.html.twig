{% extends 'base.html.twig' %}

{% block body %}
    <div class="row">
        <div class="col-md-7">
            <h2>
                Lift History
                <a href="#list-stuff-form" class="btn btn-md btn-success pull-right">
                    <span class="fa fa-plus"></span> Add
                </a>
            </h2>

            <table class="table table-striped js-rep-log-table">
                <thead>
                <tr>
                    <th>What</th>
                    <th>How many times?</th>
                    <th>Weight</th>
                    <th>&nbsp;</th>
                </tr>
                </thead>
                <tbody>
                {% for repLog in repLogs %}
                    <tr data-weight="{{ repLog.totalWeightLifted }}">
                        <td>{{ repLog.itemLabel|trans }}</td>
                        <td>{{ repLog.reps }}</td>
                        <td>{{ repLog.totalWeightLifted }}</td>
                        <td>
                        {# je mets le nom de la route dans le data attribute#}
                            <a href="#" class="js-delete-rep-log" data-url="{{ path('rep_log_delete', { id: repLog.id })}}">
                                <span><i class="fa fa-trash" aria-hidden="true"></i></span>
                            </a>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="4">Get liftin'!</td>
                    </tr>
                {% endfor %}
                </tbody>
                <tfoot>
                    <tr>
                        <td>&nbsp;</td>
                        <th>Total</th>
                        <th class="js-total-weight">{{ totalWeight }}</th>
                        <td>&nbsp;</td>
                    </tr>
                </tfoot>
            </table>

            {{ include('lift/_form.html.twig') }}

        </div>
        <div class="col-md-5">
            <div class="leaderboard">
                <h2 class="text-center">
                    <img class="dumbbell" src="{{ asset('assets/images/dumbbell.png') }}" />
                    Leaderboard
                </h2>

                {{ include('lift/_leaderboard.html.twig') }}
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts%}
    {{ parent() }}
    <script>

       var RepLogApp = {
            initialize: function($wrapper){
                this.$wrapper = $wrapper; //Propriété - this refer to this object

                this.$wrapper.find('.js-delete-rep-log').on(
                    "click", 
                    this.handleRepLogDelete.bind(this) //pas de (),car je l'initialise et ne l'exécute pas, je passe juste la fonction par référence + je fais en sorte que le this représente l'objet
                );
                this.$wrapper.find('tbody tr').on(
                    'click',
                    this.handleRowClick.bind(this) //pas de (),car je l'initialise et ne l'exécute pas
                );
            },
            updateTotalWeigthLifted: function(){
                var totalWeight = 0;
                this.$wrapper.find('tbody tr').each(function(){ //je passe une fn de callback, alors this n'est plus notre RepLogApp object, this est ici le tr element object
                    totalWeight += $(this).data('weight');
                });
                this.$wrapper.find('.js-total-weight').html(totalWeight);
            },

            handleRepLogDelete: function(e){
                e.preventDefault();
                e.stopPropagation();
                //comme j'ai bindé le this à l'objet et là je veux l'élément cliqué je vais plutot utiliser e.currentTarget
                //$(this).addClass('text-danger');
                //$(this).find('.fa')
                var $link = $(e.currentTarget);
                $link.addClass('text-danger');
                $link.find('fa')
                    .removeClass('fa-trash')
                    .addClass('fa-spinner')
                    .addClass('fa-spin');
                //console.dir(e.target);
                //console.log(e.currentTarget === this);

                //Permet de lire un data attribute , ici c'est le data qui se nomme url
                var deleteUrl = $link.data('url');
                var $row = $link.closest('tr'); //$ parce que c'est un objet JQuery
                var self = this; //la variable self correspond à l'objet RepLogApp que l'on a bindé- voir suite ligne 118
                //Appel Ajax

                $.ajax({
                    url: deleteUrl,
                    method: 'DELETE',
                    success: function(){
                        $row.fadeOut('normal', function(){
                            $row.remove(); // ou $(this) car this correspond au "row"
                            self.updateTotalWeigthLifted(); //Je suis dans un callback, je ne peux pas utiliser this, je dois utiliser l'objet
                        });                        
                    }
                });
            },

            handleRowClick: function(){
                console.log('row clicked');
            }            
        };

     $(document).ready(function(){
        var $table = $('.js-rep-log-table');  
        RepLogApp.initialize($table);
    });        
    
    </script>
{% endblock %}
